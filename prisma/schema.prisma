// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Buyer {
  id           String         @id @default(uuid())
  fullName     String         @db.VarChar(80)
  email        String?        @db.VarChar(120)
  phone        String         @db.VarChar(15)
  city         City
  propertyType PropertyType
  bhk          BHK?
  purpose      Purpose
  budgetMin    Int?
  budgetMax    Int?
  timeline     Timeline
  source       Source
  status       Status         @default(New)
  notes        String?        @db.VarChar(1000)
  tags         String[] // Array for tags (Prisma supports string[] in Postgres)
  ownerId      String
  updatedAt    DateTime       @updatedAt
  BuyerHistory BuyerHistory[]
}

model BuyerHistory {
  id        String   @id @default(uuid())
  buyerId   String
  changedBy String
  changedAt DateTime @default(now())
  diff      Json
  Buyer     Buyer    @relation(fields: [buyerId], references: [id])
}
model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password String
  name      String?
  isAdmin   Boolean  @default(false)
  // buyers    Buyer[]  @relation("OwnerBuyers")
  createdAt DateTime @default(now())
}

// Enums
enum City {
  Chandigarh
  Mohali
  Zirakpur
  Panchkula
  Other
}

enum PropertyType {
  Apartment
  Villa
  Plot
  Office
  Retail
}

enum BHK {
  BHK1
  BHK2
  BHK3
  BHK4
  Studio
}

enum Purpose {
  Buy
  Rent
}

enum Timeline {
  M0_3m
  M3_6m
  GT_6m
  Exploring
}

enum Source {
  Website
  Referral
  Walk_in
  Call
  Other
}

enum Status {
  New
  Qualified
  Contacted
  Visited
  Negotiation
  Converted
  Dropped
}
